from pickle import REDUCE
import numpy as np
import pygame
import sys
import math

BLACK = (0,0,0)
FUCHSIA = (255,0,255)
BLUE = (0,0,255)
RED = (255,0,0)
YELLOW = (255,255,0)
ROW_COUNT = 8
COLUMN_COUNT = 8
SQUARESIZE = 100
RADIUS = int(SQUARESIZE/2 - 5)

def create_board():
    board = np.zeros((ROW_COUNT,COLUMN_COUNT))
    return board

def drop_ball(board, row, column, ball):
    board[row][column] = ball 

def valid_location(board, column):
    return board[ROW_COUNT - 1][column] == 0

def open_next_row(board, column):
    for r in range(ROW_COUNT):
        if board[r][column] == 0:
            return r 

def print_board(board):
    print(np.flip(board, 0))

def winning(board, ball):
    for c in range(COLUMN_COUNT - 3):
        for r in range(ROW_COUNT):
            if board[r][c] == ball and board[r][c+1] == ball and board[r][c+2] == ball and board[r][c+3] == ball:
                return True

    for c in range(COLUMN_COUNT):
        for r in range(ROW_COUNT - 3):
            if board[r][c] == ball and board[r+1][c] == ball and board[r+2][c] == ball and board[r+3][c] == ball:
                return True
    
    for c in range(COLUMN_COUNT - 3):
        for r in range(ROW_COUNT - 3):
            if board[r][c] == ball and board[r+1][c+1] == ball and board[r+2][c+2] == ball and board[r+3][c+3] == ball:
                return True

    for c in range(COLUMN_COUNT - 3):
        for r in range(3, ROW_COUNT):
            if board[r][c] == ball and board[r-1][c+1] == ball and board[r-2][c+2] == ball and board[r-3][c+3] == ball:
                return True

def draw_board(board):
    for c in range(COLUMN_COUNT):
        for r in range(ROW_COUNT):
            pygame.draw.rect(screen, BLUE, (c*SQUARESIZE, r*SQUARESIZE+SQUARESIZE, SQUARESIZE, SQUARESIZE))
            pygame.draw.circle(screen, BLACK, (int(c*SQUARESIZE+SQUARESIZE/2), int(r*SQUARESIZE+SQUARESIZE+SQUARESIZE/2)), RADIUS)

    for c in range(COLUMN_COUNT):
        for r in range(ROW_COUNT):		
            if board[r][c] == 1:
                pygame.draw.circle(screen, RED, (int(c*SQUARESIZE+SQUARESIZE/2), height-int(r*SQUARESIZE+SQUARESIZE/2)), RADIUS)
            elif board[r][c] == 2: 
                pygame.draw.circle(screen, YELLOW, (int(c*SQUARESIZE+SQUARESIZE/2), height-int(r*SQUARESIZE+SQUARESIZE/2)), RADIUS)
    pygame.display.update()

board = create_board()
print_board(board)
game_over = False
turn = 0

pygame.init()

width = COLUMN_COUNT * SQUARESIZE
height = (ROW_COUNT + 1) * SQUARESIZE

size = (width, height)

screen = pygame.display.set_mode(size)
draw_board(board)
pygame.display.update()

myfont = pygame.font.SysFont("monospace", 75)

while not game_over:

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            sys.exit()
        
        if event.type == pygame.MOUSEMOTION:
            pygame.draw.rect(screen, BLACK, (0,0, width, SQUARESIZE))
            posx = event.pos[0]
            if turn == 0:
                pygame.draw.circle(screen, RED, (posx, int(SQUARESIZE/2)), RADIUS)
            else: 
                pygame.draw.circle(screen, YELLOW, (posx, int(SQUARESIZE/2)), RADIUS)
        pygame.display.update()

        if event.type == pygame.MOUSEBUTTONDOWN:
            pygame.draw.rect(screen, BLACK, (0,0, width, SQUARESIZE))
            #print(event.pos)
            # Ask for Player 1 Input
            if turn == 0:
                posx = event.pos[0]
                column = int(math.floor(posx/SQUARESIZE))

                if valid_location(board, column):
                    row = open_next_row(board, column)
                    drop_ball(board, row, column, 1)
                    
                    if winning(board, 1):
                        label = myfont.render("Player 1 wins!!", 1, RED)
                        screen.blit(label, (40,10))
                        game_over = True


            # # Ask for Player 2 Input
            else:
                posx = event.pos[0]
                column = int(math.floor(posx/SQUARESIZE))
                
                if valid_location(board, column):
                    row = open_next_row(board, column)
                    drop_ball(board, row, column, 2)
                    
                    if winning(board, 2):
                        label = myfont.render("Player 2 wins!!", 1, YELLOW)
                        screen.blit(label, (40,10))
                        game_over = True

            print_board(board)
            draw_board(board)

            turn += 1
            turn = turn % 2

            if game_over:
                pygame.time.wait(3000)